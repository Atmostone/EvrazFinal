openapi: 3.0.0
info:
  title: Final
  version: 1.0.0
servers:
  - url: http://127.0.0.1:1337
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
paths:
  /api/users/add_user:
    post:
      tags:
        - General
      summary: post users
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                login: Alex2
                name: Alex2
                password: qwerty
      responses:
        '200':
          description: Successful response
          content:
            application/json: { }
  /api/users/show_all:
    get:
      tags:
        - General
      summary: get users
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: Successful response
          content:
            application/json: { }
  /api/books/show_all:
    get:
      tags:
        - General
      summary: get books filter like
      security:
        - bearerAuth: [ ]
      parameters:
        - name: sort_by
          in: query
          schema:
            type: string
          example: pages
        - name: order_by
          in: query
          schema:
            type: string
          example: desc
      responses:
        '200':
          description: Successful response
          content:
            application/json: { }
  /api/books/take_book:
    post:
      tags:
        - General
      summary: return book
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                id_book: 1
                id_user: 1
                days: 7
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: Successful response
          content:
            application/json: { }
  /api/books/return_book:
    post:
      tags:
        - General
      summary: buy book
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                id_book: 1
                id_user: 1
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: Successful response
          content:
            application/json: { }
  /api/books/show_history:
    get:
      tags:
        - General
      summary: get active books
      security:
        - bearerAuth: [ ]
      parameters:
        - name: id_user
          in: query
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: { }